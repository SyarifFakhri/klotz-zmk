#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define COMBOMS 35

&lt {
     flavor = "balanced";
};

/ {
    combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <COMBOMS>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
                layers = <BASE>;
            };
            
            compatible = "zmk,combos";
            combo_to_base {
                timeout-ms = <COMBOMS>;
                key-positions = <0 1>;
                bindings = <&to BASE>;
                layers = <NAV SYM ADJ>;
            };

            compatible = "zmk,combos";
            combo_lgui {
                timeout-ms = <COMBOMS>;
                key-positions = <10 11>;
                bindings = <&kp LGUI>;
            };
            
            compatible = "zmk,combos";
            combo_bspc {
                timeout-ms = <COMBOMS>;
                key-positions = <3 4>;
                bindings = <&kp BSPC>;
            };
            
            compatible = "zmk,combos";
            combo_del {
                timeout-ms = <COMBOMS>;
                key-positions = <8 9>;
                bindings = <&kp DEL>;
            };

            compatible = "zmk,combos";
            combo_ret {
                timeout-ms = <COMBOMS>;
                key-positions = <13 14>;
                bindings = <&kp RET>;
            }; 
            
            compatible = "zmk,combos";
            combo_underscore {
                timeout-ms = <COMBOMS>;
                key-positions = <18 19>;
                bindings = <&kp UNDERSCORE>;
            };
            
            compatible = "zmk,combos";
            combo_ctrlz {
                timeout-ms = <COMBOMS>;
                key-positions = <20 21>;
                bindings
                  = <&macro_crtlz>;
            };

            compatible = "zmk,combos";
            combo_ctrlshftz {
                timeout-ms = <COMBOMS>;
                key-positions = <20 21 22>;
                bindings
                  = <&macro_crtlshftz>;
            };

            compatible = "zmk,combos";
            combo_ctrlx {
                timeout-ms = <COMBOMS>;
                key-positions = <21 22>;
                bindings
                  = <&macro_crtlx>;
            };

            compatible = "zmk,combos";
            combo_ctrlc {
                timeout-ms = <COMBOMS>;
                key-positions = <22 23>;
                bindings
                  = <&macro_crtlc>;
            };
            
           compatible = "zmk,combos";
            combo_ctrlv {
                timeout-ms = <COMBOMS>;
                key-positions = <23 24>;
                bindings
                  = <&macro_crtlv>;
            };
    };

    macros {
        macro_esc: macro_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to BASE>
                , <&kp ESC>
                ;
        };        
        
        tabcw: tabcw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp TAB>
                ;
        };
        tabccw: tabccw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LSHFT>
                ;
        };
        macro_crtlz: macro_ctrlz {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LCTRL>
                ;
        };
        macro_crtlshftz: macro_ctrlshftz {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LCTRL>
                , <&macro_release &kp LSHFT>
                ;
        };
        macro_crtlx: macro_ctrlx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp X>
                , <&macro_release &kp LCTRL>
                ;
        };
        macro_crtlc: macro_ctrlc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };
        macro_crtlv: macro_ctrlv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };
    };

    behaviors {
        encoder_alt_tab: encoder_alt_tab {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&tabcw>, <&tabccw>;
        };

        ct: custom_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
        };

        htl: hold_toggle_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&mo>, <&tog>;
            tapping-term-ms = <300>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
display-name= "BASE"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

    &ct LGUI Q  &ct LALT W  &ct LCTRL F &ct LSHFT P &kp B           &kp J       &ct RSHFT L &ct RCTRL U &ct RALT Y  &ct RGUI SEMI
    &kp A       &kp R       &kp S       &kp T       &kp G           &kp M       &kp N       &kp E       &kp I       &kp O
   &htl NAV NAV &htl SYM SYM &kp DOT    &kp D       &kp V           &kp K       &kp H       &kp C       &kp X       &kp Z
                                        &kp LCTRL   &kp SPACE       &kp LALT    &ct RSHFT TAB    
                        >;
            sensor-bindings = <&encoder_alt_tab &inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                nav_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
display-name= "NAVI"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

    &trans      &kp N7      &kp N8      &kp N9      &kp EQUAL       &kp RBRC    &kp B       &kp UP      &kp W       &kp E
    &kp TAB     &kp N4      &kp N5      &kp N6      &kp MINUS       &kp LBRC    &ct RSHFT LEFT &kp DOWN &kp RIGHT   &trans
    &trans      &kp N1      &kp N2      &kp N3      &kp KP_MULTIPLY &trans      &kp PG_UP   &kp CAPS    &kp PG_DN   &trans
                                        &kp N0      &kp LALT       &mo ADJ     &kp LSHFT     
                        >;
            sensor-bindings = <&encoder_alt_tab &inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                sim_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
display-name= "SYM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

    &kp AMPS    &trans      &kp KP_MULTIPLY &kp GRAVE &kp LBRC      &kp RBRC    &kp AMPS    &kp DLLR    &trans      &kp COLON
    &kp DLLR    &trans      &kp PRCNT   &kp CARET   &kp LPAR        &kp RPAR    &kp BSLH    &kp SQT     &kp DQT     &kp QMARK
    &kp EXCL    &trans      &kp AT      &kp HASH    &kp LBKT        &kp RBKT    &kp COMMA   &kp DOT     &kp FSLH    &trans
                                        &kp LCTRL   &kp EXCL        &trans      &kp RSHFT
                        >;
            sensor-bindings = <&encoder_alt_tab &inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                adjust_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
display-name= "ADJ"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

    &sys_reset  &bt BT_CLR &out OUT_TOG &trans      &trans          &trans      &kp F7      &kp F8      &kp F9      &kp F12
    &bootloader &bt BT_NXT  &trans      &trans      &trans          &trans      &kp F4      &kp F5      &kp F6      &kp F11  
    &trans      &bt BT_PRV  &trans      &trans      &trans          &trans      &kp F1      &kp F2      &kp F3      &kp F10     
                                        &bt BT_SEL 0 &trans         &trans      &trans
                        >;
            sensor-bindings = <&encoder_alt_tab &inc_dec_kp C_VOL_UP C_VOL_DN>;
                };
        };
};